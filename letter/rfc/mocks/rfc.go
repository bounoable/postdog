// Code generated by MockGen. DO NOT EDIT.
// Source: rfc.go

// Package mock_rfc is a generated GoMock package.
package mock_rfc

import (
	rfc "github.com/bounoable/postdog/letter/rfc"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockClock is a mock of Clock interface
type MockClock struct {
	ctrl     *gomock.Controller
	recorder *MockClockMockRecorder
}

// MockClockMockRecorder is the mock recorder for MockClock
type MockClockMockRecorder struct {
	mock *MockClock
}

// NewMockClock creates a new mock instance
func NewMockClock(ctrl *gomock.Controller) *MockClock {
	mock := &MockClock{ctrl: ctrl}
	mock.recorder = &MockClockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClock) EXPECT() *MockClockMockRecorder {
	return m.recorder
}

// Now mocks base method
func (m *MockClock) Now() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Now")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// Now indicates an expected call of Now
func (mr *MockClockMockRecorder) Now() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Now", reflect.TypeOf((*MockClock)(nil).Now))
}

// MockMessageIDFactory is a mock of MessageIDFactory interface
type MockMessageIDFactory struct {
	ctrl     *gomock.Controller
	recorder *MockMessageIDFactoryMockRecorder
}

// MockMessageIDFactoryMockRecorder is the mock recorder for MockMessageIDFactory
type MockMessageIDFactoryMockRecorder struct {
	mock *MockMessageIDFactory
}

// NewMockMessageIDFactory creates a new mock instance
func NewMockMessageIDFactory(ctrl *gomock.Controller) *MockMessageIDFactory {
	mock := &MockMessageIDFactory{ctrl: ctrl}
	mock.recorder = &MockMessageIDFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMessageIDFactory) EXPECT() *MockMessageIDFactoryMockRecorder {
	return m.recorder
}

// GenerateID mocks base method
func (m *MockMessageIDFactory) GenerateID(arg0 rfc.Mail) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateID", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GenerateID indicates an expected call of GenerateID
func (mr *MockMessageIDFactoryMockRecorder) GenerateID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateID", reflect.TypeOf((*MockMessageIDFactory)(nil).GenerateID), arg0)
}
